{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["LikeButton","props","React","useState","liked","setLike","className","onClick","likeCount","LikeText","App","setCount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAIA,SAASA,EAAWC,GAAW,MAEJC,IAAMC,UAAS,GAFX,mBAEtBC,EAFsB,KAEfC,EAFe,KAavBC,EAAYF,EAAM,QAAQ,OAEhC,OAAO,wBAAQE,UAAWA,EAAY,WAAYC,QAAS,kBAVzDN,EAAMM,SAAQ,SAACC,GAAD,OAAuBA,EAAY,UAIjDH,GAFgBD,IAQX,kBAMT,SAASK,EAASR,GAChB,OAAO,+DAASA,EAAMO,aAoCTE,MA9Bf,WAAe,MAEiBR,IAAMC,SAAS,IAFhC,mBAENK,EAFM,KAEKG,EAFL,KAIb,OACE,qBAAKL,UAAU,MAAf,SACE,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,WAAf,UACI,oBAAIA,UAAU,kCAAd,kFACA,mBAAGA,UAAU,iBAAb,wGAEJ,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,oBAAIA,UAAU,eAAd,oFACA,mBAAGA,UAAU,iBAAb,0NACA,mBAAGA,UAAU,iBAAb,6DACA,mBAAGA,UAAU,iBAAb,+DACA,cAACN,EAAD,CAAYO,QAASI,OAEvB,sBAAKL,UAAU,yBAAf,UACE,oBAAIA,UAAU,eAAd,kFACA,mBAAGA,UAAU,iBAAb,kFACA,cAACG,EAAD,CAAUD,UAAWA,gBCxClBI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ebbcab8f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n// Likeボタンコンポーネント\nfunction LikeButton(props: any){\n  // いいねのボタンの色の状態をstate管理。setLikeが変更されると画面が更新される\n  const [liked, setLike] = React.useState(false);\n  // クリック時の処理。アロー関数\n  const clicked = () => {\n    props.onClick((likeCount: number) => likeCount + 1);\n    // 現在のlikedの状態と逆のboolean型をchangeに代入\n    const change = !liked;\n    // setLikeの更新。画面が更新される。changeを代入\n    setLike(change);\n  }\n  // 三項演算子\n  // likedがtlueの場合はclassがlikedに\n  const className = liked?'liked':'like';\n  // ボタンを生成\n  return <button className={className + ' likeBtn'} onClick={()=> clicked()}>Like</button>\n}\n\n\n\n// いいね数を表示\nfunction LikeText(props: any){\n  return <p>いいね数：{props.likeCount}</p>\n}\n\n\n\n// 描画----------------------------------------\nfunction App() {\n  // stateをAppで管理\n  const [likeCount, setCount] = React.useState(11);\n\n  return (\n    <div className=\"App\">\n      <div className=\"AppBox\">\n        <div className=\"AppAbout\">\n            <h1 className=\"parentComponentTxt componentTxt\">LikeText（親コンポーネント）</h1>\n            <p className=\"componentAbout\">stateはAppで管理：const [likeCount, setCount] = React.useState(11);</p>\n        </div>\n        <div className=\"AppBoxContents\">\n          <div className=\"AppContent LikeButtonBox\">\n            <h1 className=\"componentTxt\">LikeButton（子コンポーネント）</h1>\n            <p className=\"componentAbout\">いいねのボタンの色の状態をstate管理。setLikeが変更されると画面が更新される。</p>\n            <p className=\"componentAbout\">const [liked, setLike] = React.useState(false);</p>\n            <p className=\"componentAbout\"> propsにCountを+1にする。</p>\n            <LikeButton onClick={setCount} />\n          </div>\n          <div className=\"AppContent LikeTextBox\">\n            <h1 className=\"componentTxt\">LikeText（子コンポーネント）</h1>\n            <p className=\"componentAbout\">propsからlikeCountを取得し表示。</p>\n            <LikeText likeCount={likeCount}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}